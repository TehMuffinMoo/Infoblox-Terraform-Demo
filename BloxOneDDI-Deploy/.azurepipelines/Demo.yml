parameters:
- name: action
  displayName: Terraform Action
  type: string
  default: Plan
  values:
  - Plan
  - Apply
  - Destroy

trigger: none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Plan
  condition: ${{ eq(parameters.action, 'Plan') }}
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    steps:
    - task: TerraformTaskV4@4
      displayName: Initialize Terraform
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'azure-infobloxlab'
        backendAzureRmResourceGroupName: 'infobloxlab'
        backendAzureRmStorageAccountName: 'sainfobloxlab'
        backendAzureRmContainerName: 'deploy-demo'
        backendAzureRmKey: 'state.tfstate'
        workingDirectory: 'BloxOneDDI-Deploy'

    - task: TerraformTaskV4@4
      name: terraformPlan
      displayName: Create Terraform Plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '-out main.tfplan --var-file=demo.tfvars -var b1_api_key=$(B1DDI_API_KEY)'
        workingDirectory: 'BloxOneDDI-Deploy'
        environmentServiceNameAzureRM: 'azure-infobloxlab'

- stage: Apply
  condition: ${{ eq(parameters.action, 'Apply') }}
  displayName: 'Terraform Apply'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - task: TerraformTaskV4@4
      displayName: Initialize Terraform
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'azure-infobloxlab'
        backendAzureRmResourceGroupName: 'infobloxlab'
        backendAzureRmStorageAccountName: 'sainfobloxlab'
        backendAzureRmContainerName: 'deploy-demo'
        backendAzureRmKey: 'state.tfstate'
        workingDirectory: 'BloxOneDDI-Deploy'

    - task: TerraformTaskV4@4
      name: terraformPlan
      displayName: Create Terraform Plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '-out main.tfplan --var-file=demo.tfvars -var b1_api_key=$(B1DDI_API_KEY)'
        workingDirectory: 'BloxOneDDI-Deploy'
        environmentServiceNameAzureRM: 'azure-infobloxlab'

    - task: TerraformTaskV4@4
      name: terraformApply
      displayName: Apply Terraform Plan
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: 'main.tfplan'
        workingDirectory: 'BloxOneDDI-Deploy'
        environmentServiceNameAzureRM: 'azure-infobloxlab'

- stage: Destroy
  condition: ${{ eq(parameters.action, 'Destroy') }}
  displayName: 'Terraform Destroy'
  jobs:
  - job: TerraformDestroy
    displayName: 'Terraform Destroy'
    steps:
    - task: TerraformTaskV4@4
      displayName: Initialize Terraform
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'azure-infobloxlab'
        backendAzureRmResourceGroupName: 'infobloxlab'
        backendAzureRmStorageAccountName: 'sainfobloxlab'
        backendAzureRmContainerName: 'deploy-demo'
        backendAzureRmKey: 'state.tfstate'
        workingDirectory: 'BloxOneDDI-Deploy'
      
    - task: TerraformTaskV4@4
      name: terraformDestroy
      displayName: Destroy Terraform Plan
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        commandOptions: '--var-file=demo.tfvars -var b1_api_key=$(B1DDI_API_KEY)'
        workingDirectory: 'BloxOneDDI-Deploy'
        environmentServiceNameAzureRM: 'azure-infobloxlab'